Using Code First Migrations. The first step is to enable migrations for our context.

Run the Enable-Migrations command in Package Manager Console

This command has added a Migrations folder to our project.

The folder includes the Configuration class. This class allows you to configure how Migrations behaves for your context. For this walkthrough we will just 
use the default configuration. Because there is just a single Code First context in your project, Enable-Migrations has automatically 
filled in the context type this configuration applies to.

Code First Migrations uses a snapshot of the model stored in the most recent migration to detect changes to the model. Since we are going to assume that 
databases already have the schema of the current model, we will generate an empty (no-op) migration that has the current model as a snapshot.

Add-Migration InitialCreate –IgnoreChanges

Then

Update-Database

We need to scaffold a migration to take care of the new tems we have added. The Add-Migration command allows us to give these migrations 
a name, let’s just call ours TokenAuthentication.

Add-Migration TokenAuthentication

The Designer Code for this migration file includes a snapshot of your current Code First model. This snapshot is used to calculate the 
changes to your model when you scaffold the next migration. If you make additional changes to your model that you want to include in this 
migration, then you can re-scaffold it by running 'Add-Migration TokenAuthentication' again.

Run the Update-Database command in Package Manager Console to apply this migration to the database.

Specify the '-Verbose' flag to view the SQL statements being applied to the target database.
Applying explicit migrations: [201711241555349_TokenAuthentication].
Applying explicit migration: 201711241555349_TokenAuthentication.
Running Seed method.

Getting a SQL Script
If another developer wants these changes on their machine they can just sync once we check our changes into source control. Once they have our 
new migrations they can just run the Update-Database command to have the changes applied locally. However if we want to push these changes out to 
a test server, and eventually production, we probably want a SQL script we can hand off to our DBA.

Run the Update-Database command but this time specify the –Script flag so that changes are written to a script rather than applied. We’ll also 
specify a source and target migration to generate the script for. We want a script to go from an empty database ($InitialDatabase) to the latest 
version (migration TokenAuthentication). If you don’t specify a target migration, Migrations will use the latest migration as the target. If you 
don't specify a source migrations, Migrations will use the current state of the database.
Run the Update-Database -Script -SourceMigration: $InitialDatabase -TargetMigration: TokenAuthentication command in Package Manager Console
Code First Migrations will run the migration pipeline but instead of actually applying the changes it will write them out to a .sql file for you. 
Once the script is generated, it is opened for you in Visual Studio, ready for you to view or save.

Ex:

Enable-Migrations
Add-Migration InitialCreate –IgnoreChanges
Update-Database
Add-Migration FBAccess
Update-Database

----

Add-Migration FBAccess_CompositeKey
Update-Database

----

On a new Server, code-first cannot create DB : err : CREATE DATABASE permission denied in database 'master'.
but Update-Database creates DB and applies all migrations

---

VS > Tools > NuGet Package Manager > Package Manager Console : Default project : ArabicTextAnalyzer
Add-Migration ThemePerUser
Update-Database

---

VS > Tools > NuGet Package Manager > Package Manager Console : Default project : ArabicTextAnalyzer
Add-Migration ThemeKeyWordWithType
Update-Database

---

VS > Tools > NuGet Package Manager > Package Manager Console : Default project : ArabicTextAnalyzer
Add-Migration ArabiziIsFR
Update-Database

---

VS > Tools > NuGet Package Manager > Package Manager Console : Default project : ArabicTextAnalyzer
Add-Migration ArabiziTheme
Update-Database

---

VS > Tools > NuGet Package Manager > Package Manager Console : Default project : ArabicTextAnalyzer
Add-Migration ThemeKeyWordWithCount
Update-Database

---

VS > Tools > NuGet Package Manager > Package Manager Console : Default project : ArabicTextAnalyzer
rename Configuration.cs to Configuration.orig.cs
Enable-Migrations -ContextTypeName ArabicTextAnalyzer.Models.ApplicationDbContext
rename new Configuration.cs to ConfigurationApplicationDbContext.cs
rename back Configuration.orig.cs to Configuration.cs
Add-Migration LastLoginTime_ArabiziDbContext -ConfigurationTypeName Configuration
Update-Database -ConfigurationTypeName Configuration

---

VS > Tools > NuGet Package Manager > Package Manager Console : Default project : ArabicTextAnalyzer
Add-Migration UserGuid_ArabiziDbContext -ConfigurationTypeName Configuration
Update-Database -ConfigurationTypeName Configuration

/*
add-migration InitialCreate_ApplicationDbContext -IgnoreChanges -ConfigurationTypeName ConfigurationApplicationDbContext
update-database -TargetMigration InitialCreate_ApplicationDbContext -ConfigurationTypeName ConfigurationApplicationDbContext
Update-Database -Script -SourceMigration: $InitialDatabase -TargetMigration: TokenAuthentication -ConfigurationTypeName ConfigurationApplicationDbContext
Update-Database -ConfigurationTypeName ConfigurationApplicationDbContext
add-Migration LastLoginTime_ApplicationDbContext -ConfigurationTypeName ConfigurationApplicationDbContext
Add-Migration InitialCreate –IgnoreChanges ?
Add-Migration LastLoginTime -ConnectionString DefaultConnection -Verbose
Add-Migration LastLoginTime -ConnectionString "Data Source=.\SQLEXPRESS;AttachDbFilename=|DataDirectory|\aspnet-ArabicTextAnalyzer-20170518103120.mdf;Initial Catalog=aspnet-ArabicTextAnalyzer-20170518103120;Integrated Security=True;User Instance=True" -ConnectionProviderName "System.Data.SqlClient"
Add-Migration LastLoginTime -ConnectionString "Data Source=.\SQLEXPRESS;Initial Catalog=ArabiziDB;Integrated Security=True" -ConnectionProviderName "System.Data.SqlClient"
Add-Migration ThemeKeyWordWithCount
Update-Database*/

---

VS > Tools > NuGet Package Manager > Package Manager Console : Default project : ArabicTextAnalyzer
Add-Migration isDeleted_ArabiziDbContext -ConfigurationTypeName Configuration
Update-Database -ConfigurationTypeName Configuration

---

VS > Tools > NuGet Package Manager > Package Manager Console : Default project : ArabicTextAnalyzer
Add-Migration contrib_ArabiziDbContext -ConfigurationTypeName Configuration
Update-Database -ConfigurationTypeName Configuration

---

/*VS > Tools > NuGet Package Manager > Package Manager Console : Default project : ArabicTextAnalyzer
add-migration InitialCreate_ApplicationDbContext -IgnoreChanges -ConfigurationTypeName ConfigurationApplicationDbContext
Add-Migration fullName -ConfigurationTypeName ConfigurationApplicationDbContext
NOT WORKING : (but row added in __MigrationHistory and clones tables created with prefix "ArabicTextAnalyzer.Models.ArabiziDbContext.*")

MigrationId	ContextKey	Model	ProductVersion
201804151400443_InitialCreate	ArabicTextAnalyzer.Models.ArabiziDbContext	0x	6.1.3-40302

One or more validation errors were detected during model generation:

ArabicTextAnalyzer.Models.IdentityUserRole: : EntityType 'IdentityUserRole' has no key defined. Define the key for this EntityType.
ArabicTextAnalyzer.Models.IdentityUserLogin: : EntityType 'IdentityUserLogin' has no key defined. Define the key for this EntityType.
IdentityUserRoles: EntityType: EntitySet 'IdentityUserRoles' is based on type 'IdentityUserRole' that has no keys defined.
IdentityUserLogins: EntityType: EntitySet 'IdentityUserLogins' is based on type 'IdentityUserLogin' that has no keys defined.
*/
Manually add FullName in apsnet db : nvarchar(256) null in DB aspnet-ArabicTextAnalyzer-20170518103120 in table AspNetUsers
plus fk_activity bit null, plus City nvarchar(256) null, plkus Country nvarchar(256) null
actually fk_activity_id int null, cant drop/change fk_activity col 

// to build an index on fb comments 
ALTER TABLE FBFeedComments
ALTER COLUMN feedId varchar(150);

//
ALTER TABLE T_FB_POST
ALTER COLUMN fk_influencer varchar(150);

---

VS > Tools > NuGet Package Manager > Package Manager Console : Default project : ArabicTextAnalyzer
Add-Migration fbNERs_ArabiziDbContext -ConfigurationTypeName Configuration
=> PB : MoveTable(name: "[ArabicTextAnalyzer.Models.ArabiziDbContext].ClientKeys", newSchema: "dbo"); ???!!!
=> SOL : I have commentted the MoveTable but kept AddColumn FK_ENTRY & ENTRY_type
Update-Database -ConfigurationTypeName Configuration

---

VS > Tools > NuGet Package Manager > Package Manager Console : Default project : ArabicTextAnalyzer
Add-Migration configKeywords_ArabiziDbContext -ConfigurationTypeName Configuration
Update-Database -ConfigurationTypeName Configuration