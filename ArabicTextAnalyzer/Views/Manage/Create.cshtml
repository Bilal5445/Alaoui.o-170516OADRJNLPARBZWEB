@using ArabicTextAnalyzer.Domain.Models;
@model RegisterApp
@{
    ViewBag.Title = "My Apps";
    bool existClientKeys = ViewBag.clientExist;
}
<div class="form-horizontal">
    <h4>My Apps</h4>
    <hr />
    @if (existClientKeys == false)
    {
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, "Enter App Name:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-5">
                    <div class="pull-left">
                        <input type="submit" value="Create" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        ClientKeys clientkeys = ViewBag.clientkeys;
        <div class="form-group">
            <div class="col-lg-2">
                <img src="~/Content/Images/app.jpg" width="150" height="150" />
            </div>
            <div class="col-lg-10">
                @if (clientkeys != null)
                {
                    <p> <label class="control-label">App Name:</label> @clientkeys.RegisterApps.Name</p>
                    <p> <label class="control-label">ClientId:</label> @clientkeys.ClientId</p>
                    <p> <label class="control-label">Client Secret:</label> @clientkeys.ClientSecret</p>
                    <p> <label class="control-label">Total Max Call Limit:</label> @clientkeys.RegisterApps.TotalAppCallLimit</p>
                    <p> <label class="control-label">Total Consumed Call:</label> @clientkeys.RegisterApps.TotalAppCallConsumed</p>
                }
            </div>
        </div>
    }
</div>
