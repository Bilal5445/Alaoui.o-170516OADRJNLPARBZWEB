@using ArabicTextAnalyzer.Content.Resources
@using ArabicTextAnalyzer.Domain.Models
@using OADRJNLPCommon.Models
@model M_ARABIZIENTRY
@{
    ViewBag.Title = R.TranslateNerSa;
    Layout = "~/Views/Shared/_Layout.cshtml";

    //
    var token = Session["_T0k@n_"];
    var user = Session["userId"];
    List<RegisterApp> registerAppList = ViewBag.registerApp;
    var message = Session["message"];
    Session["message"] = "";
    bool showAlertWarning = ViewBag.showAlertWarning;
    bool showAlertSuccess = ViewBag.showAlertSuccess;
    String msgAlert = ViewBag.msgAlert;

    //
    IEnumerable<LM_CountPerKeyword> nersWithCounts = ViewBag.NersWithCounts ?? new LM_CountPerKeyword();
}

@section styles {

    @* mandatory : vertical menus, ... *@
    @Styles.Render("~/Content/css_train")

    @Styles.Render("~/Content/css_train_tagsinput")

    @* datatables.net dependencies *@
    <link href="https://cdn.datatables.net/select/1.2.3/css/select.dataTables.min.css" rel="stylesheet" />
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/1.4.2/css/buttons.dataTables.min.css" />

    @* datepicker *@
    <link rel="stylesheet" type="text/css" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" />
}

@section scripts {

    <!-- bootstrap 4.x -->
    <!--<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js" integrity="sha384-vFJXuSJphROIrBnz7yo7oB41mKfc8JzQZiCq4NCceLEaO4IHwicKwpJf9c9IpFgh" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js" integrity="sha384-alpBpkh1PFOepccYVYDB4do5UnbKysX5WZXm3XxPqe5iKTfUKjNkCk9SaVuEZflJ" crossorigin="anonymous"></script>-->

    @* datatables.net dependencies *@
    <script type="text/javascript" src="https://cdn.datatables.net/1.10.13/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.10.13/js/dataTables.bootstrap.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/mark.js/8.6.0/jquery.mark.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/datatables.mark.js/2.0.0/datatables.mark.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/select/1.2.3/js/dataTables.select.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/buttons/1.4.2/js/dataTables.buttons.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/buttons/1.4.2/js/buttons.html5.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/buttons/1.4.2/js/buttons.flash.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.32/pdfmake.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.32/vfs_fonts.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/buttons/1.4.2/js/buttons.print.min.js"></script>

    @* localization js *@
    @* <script type="text/javascript" src="~/Scripts/jquery.i18n.min.js"></script> *@

    @* the scripts that load data into the partial view (using datatables.net) and allow displaying/selecting/filtering *@
    @Scripts.Render("~/bundles/js_train")
    @* @Scripts.Render("~/bundles/js_train_keywordfiltering"); *@
    <script type="text/javascript" src="~/Scripts/mysite_train_keywordfiltering.js"></script>
    @Scripts.Render("~/bundles/js_train_workingdata")

    @Scripts.Render("~/bundles/js_train_tagsinput");

    @* date picker *@
    <script type="text/javascript" src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <script type="text/javascript">
    /*function updateMonitor(status) {
        $("#monitors").html("Task : " + status);
    }

    function monitor() {
        // Init monitors
        $("#monitors").append($("<p>0</>"));
        updateMonitor("Started");

        // Periodically update monitors
        var intervalId = setInterval(function () {
            console.log("call Data_Upload_Progress");
            $.post("Train/Data_Upload_Progress", {}, function (progress) {
                console.log("call Data_Upload_Progress : " + progress);
                if (progress == -1) {
                    updateMonitor("Completed");
                    clearInterval(intervalId);
                } else {
                    updateMonitor(progress);
                }
            }).fail(function () {
                console.log("call Data_Upload_Progress - fail");
            });
        }, 1000);
    }*/
    </script>

    <!-- Latest compiled and minified CSS & Latest compiled and minified JavaScript : needed for filter by ner -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.4/css/bootstrap-select.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.4/js/bootstrap-select.min.js"></script>
}

@functions {

    Boolean IsRandALCat(Int32 c)
    {
        int hasRandALCat = 0;
        if (c >= 0x5BE && c <= 0x10B7F)
        {
            if (c <= 0x85E)
            {
                if (c == 0x5BE) hasRandALCat = 1;
                else if (c == 0x5C0) hasRandALCat = 1;
                else if (c == 0x5C3) hasRandALCat = 1;
                else if (c == 0x5C6) hasRandALCat = 1;
                else if (0x5D0 <= c && c <= 0x5EA) hasRandALCat = 1;
                else if (0x5F0 <= c && c <= 0x5F4) hasRandALCat = 1;
                else if (c == 0x608) hasRandALCat = 1;
                else if (c == 0x60B) hasRandALCat = 1;
                else if (c == 0x60D) hasRandALCat = 1;
                else if (c == 0x61B) hasRandALCat = 1;
                else if (0x61E <= c && c <= 0x64A) hasRandALCat = 1;
                else if (0x66D <= c && c <= 0x66F) hasRandALCat = 1;
                else if (0x671 <= c && c <= 0x6D5) hasRandALCat = 1;
                else if (0x6E5 <= c && c <= 0x6E6) hasRandALCat = 1;
                else if (0x6EE <= c && c <= 0x6EF) hasRandALCat = 1;
                else if (0x6FA <= c && c <= 0x70D) hasRandALCat = 1;
                else if (c == 0x710) hasRandALCat = 1;
                else if (0x712 <= c && c <= 0x72F) hasRandALCat = 1;
                else if (0x74D <= c && c <= 0x7A5) hasRandALCat = 1;
                else if (c == 0x7B1) hasRandALCat = 1;
                else if (0x7C0 <= c && c <= 0x7EA) hasRandALCat = 1;
                else if (0x7F4 <= c && c <= 0x7F5) hasRandALCat = 1;
                else if (c == 0x7FA) hasRandALCat = 1;
                else if (0x800 <= c && c <= 0x815) hasRandALCat = 1;
                else if (c == 0x81A) hasRandALCat = 1;
                else if (c == 0x824) hasRandALCat = 1;
                else if (c == 0x828) hasRandALCat = 1;
                else if (0x830 <= c && c <= 0x83E) hasRandALCat = 1;
                else if (0x840 <= c && c <= 0x858) hasRandALCat = 1;
                else if (c == 0x85E) hasRandALCat = 1;
            }
            else if (c == 0x200F) hasRandALCat = 1;
            else if (c >= 0xFB1D)
            {
                if (c == 0xFB1D) hasRandALCat = 1;
                else if (0xFB1F <= c && c <= 0xFB28) hasRandALCat = 1;
                else if (0xFB2A <= c && c <= 0xFB36) hasRandALCat = 1;
                else if (0xFB38 <= c && c <= 0xFB3C) hasRandALCat = 1;
                else if (c == 0xFB3E) hasRandALCat = 1;
                else if (0xFB40 <= c && c <= 0xFB41) hasRandALCat = 1;
                else if (0xFB43 <= c && c <= 0xFB44) hasRandALCat = 1;
                else if (0xFB46 <= c && c <= 0xFBC1) hasRandALCat = 1;
                else if (0xFBD3 <= c && c <= 0xFD3D) hasRandALCat = 1;
                else if (0xFD50 <= c && c <= 0xFD8F) hasRandALCat = 1;
                else if (0xFD92 <= c && c <= 0xFDC7) hasRandALCat = 1;
                else if (0xFDF0 <= c && c <= 0xFDFC) hasRandALCat = 1;
                else if (0xFE70 <= c && c <= 0xFE74) hasRandALCat = 1;
                else if (0xFE76 <= c && c <= 0xFEFC) hasRandALCat = 1;
                else if (0x10800 <= c && c <= 0x10805) hasRandALCat = 1;
                else if (c == 0x10808) hasRandALCat = 1;
                else if (0x1080A <= c && c <= 0x10835) hasRandALCat = 1;
                else if (0x10837 <= c && c <= 0x10838) hasRandALCat = 1;
                else if (c == 0x1083C) hasRandALCat = 1;
                else if (0x1083F <= c && c <= 0x10855) hasRandALCat = 1;
                else if (0x10857 <= c && c <= 0x1085F) hasRandALCat = 1;
                else if (0x10900 <= c && c <= 0x1091B) hasRandALCat = 1;
                else if (0x10920 <= c && c <= 0x10939) hasRandALCat = 1;
                else if (c == 0x1093F) hasRandALCat = 1;
                else if (c == 0x10A00) hasRandALCat = 1;
                else if (0x10A10 <= c && c <= 0x10A13) hasRandALCat = 1;
                else if (0x10A15 <= c && c <= 0x10A17) hasRandALCat = 1;
                else if (0x10A19 <= c && c <= 0x10A33) hasRandALCat = 1;
                else if (0x10A40 <= c && c <= 0x10A47) hasRandALCat = 1;
                else if (0x10A50 <= c && c <= 0x10A58) hasRandALCat = 1;
                else if (0x10A60 <= c && c <= 0x10A7F) hasRandALCat = 1;
                else if (0x10B00 <= c && c <= 0x10B35) hasRandALCat = 1;
                else if (0x10B40 <= c && c <= 0x10B55) hasRandALCat = 1;
                else if (0x10B58 <= c && c <= 0x10B72) hasRandALCat = 1;
                else if (0x10B78 <= c && c <= 0x10B7F) hasRandALCat = 1;
            }
        }

        return hasRandALCat == 1 ? true : false;
    }

}

<h2>@ViewBag.Title.</h2>
<h4>@R.TranslateDisplayFilterEtc</h4>
<hr />

<!-- theme menu -->
<div class="container thememenu" style="text-align: center; display: none;">
    <div class="dropdown div-inline">
        <button class="btn btn-outline-primary btn-xs dropdown-toggle" type="button" data-toggle="dropdown"><span class="caret"></span></button>
        <ul class="dropdown-menu">
            @foreach (var userXtrctTheme in ViewBag.UserXtrctThemes)
            {
                <li class="@userXtrctTheme.CurrentActive"><a href="@Url.Action("XtrctTheme_ApplyNewActive", new { themename = userXtrctTheme.ThemeName })">@userXtrctTheme.ThemeName</a></li>
            }
        </ul>
    </div>
    <!-- theme menu : add new theme -->
    <button type="button" class="btn btn-outline-primary btn-xs" data-toggle="modal" data-target="#myModal">
        <span class="glyphicon glyphicon-plus"></span>
    </button>
    <!-- theme menu : edit theme -->
    <button type="button" class="btn btn-outline-primary btn-xs" data-toggle="modal" data-target="#myModal">
        <span class="glyphicon glyphicon-edit"></span>
    </button>
    <!-- theme menu : remove theme -->
    <button type="button" class="btn btn-outline-primary btn-xs" data-toggle="modal" data-target="#myModalRemoveTheme">
        <span class="glyphicon glyphicon-remove"></span>
    </button>
</div>

<!-- modal confirmation remove theme -->
@if (ViewBag.UserActiveXtrctTheme != null)
{
    <div id="myModalRemoveTheme" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" style="color:darkblue;">@R.ConfirmThemeDeletion</h4>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("XtrctTheme_Delete", "Train", FormMethod.Post))
                    {
                        <div class="form-group">
                            <label for="themename">@R.AreYouSureYouWantToDeleteTheTheme</label>
                            @Html.TextBox("themename", (string)ViewBag.UserActiveXtrctTheme.ThemeName.Trim(), new { @class = "form-control", @required = "required", id = "themenamefordelete", @readonly = "readonly" })
                            @Html.Hidden("idXtrctTheme", (Guid)ViewBag.UserActiveXtrctTheme.ID_XTRCTTHEME)
                        </div>
                        <button type="submit" class="btn btn-default btn-success">@R.Delete</button>
                    }
                </div>
            </div>
        </div>
    </div>
}

@if (token == null || string.IsNullOrEmpty(token as string))
{
    <!-- token generation -->
    <div class="row">
        @using (Html.BeginForm("GenerateToken", "Manage"))
        {
            <div class="form-group"></div>
            <div class="form-group col-lg-12">
                <div class="col-lg-2"></div>
                <label class="control-label col-lg-1">My Apps</label>
                <div class="col-lg-4">
                    @Html.DropDownList("userId", new SelectList(registerAppList, "UserID", "Name", !string.IsNullOrEmpty(Convert.ToString(token)) ? Convert.ToString(user) : ""), "---Select App---", new { @class = "form-control", @required = "required" })
                </div>
                <div class="col-lg-4">
                    <input type="submit" value="Generate Token" class="btn btn-primary" />
                </div>
            </div>
            <div class="col-lg-12">
                <div class="form-group">
                    <div class="alert alert-warning alert-dismissable div-inline margin-bottom-0" style="@(showAlertWarning != true ? "display: none;" : "")">
                        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                        <strong>Warning!</strong> @msgAlert
                    </div>

                    <div class="alert alert-success alert-dismissable div-inline margin-bottom-0" style="@(showAlertSuccess != true ? "display: none;" : "")">
                        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                        <strong>Success!</strong> @msgAlert
                    </div>
                </div>
            </div>
        }
    </div>
}
else if (token != null && !string.IsNullOrEmpty(token as string))
{
    <!-- aribizi translate std -->
    using (Html.BeginForm("TrainStepOne", "Train", new { mainEntity = @ViewBag.UserActiveXtrctTheme.ThemeName.Trim() }, FormMethod.Post, new { id = "trainformstd" }))
    {
        <div class="panel panel-default active">
            <div class="panel-heading">@R.Arabizi</div>
            <div class="panel-body" style="padding: 0;">
                <div class="input-group">
                    @Html.TextAreaFor(m => m.ArabiziText, new { id = "SentenceIn", style = "resize:none", rows = 2, @class = "form-control custom-control", @required = "required", @placeholder = R.TypeArabiziTextAndClickGo })
                    @Html.HiddenFor(m => m.ArabiziEntryDate, new { @Value = System.DateTime.Now.ToString("yyyy-MM-dd HH:MM:ss") })
                    @Html.HiddenFor(m => m.ID_XTRCTTHEME, new { @Value = ViewBag.UserActiveXtrctTheme.ID_XTRCTTHEME })
                    <span class="input-group-addon btn btn-primary" onclick="document.forms['trainformstd'].submit();">Go</span>
                </div>
            </div>
        </div>
    }

    <!-- arabizi keying & corpus info & co -->
    <div id="row-arabizi-input" class="row" style="margin-top: 30px; display: none;">
        <!-- column 1 : arabizi input -->
        <div class="col-md-3 col-sm-6">
            @using (Html.BeginForm("TrainStepOne", "Train", FormMethod.Post))
                {
                <div class="panel panel-default active">
                    <div class="panel-heading">Arabizi</div>
                    <div class="panel-body" style="padding: 0; height: 150px">
                        @Html.TextAreaFor(m => m.ArabiziText, new { id = "SentenceIn", style = "height: 100%; width: 100%", @required = "required" })
                        @Html.HiddenFor(m => m.ArabiziEntryDate, new { @Value = System.DateTime.Now.ToString("yyyy-MM-dd HH:MM:ss") })
                    </div>
                </div>
            <!-- button submit -->
                <div class="row">
                    <div class="col-md-2">
                        <button class="btn btn-success btn-md" type="submit" id="train">
                            Train
                        </button>
                    </div>
                </div>
            }
        </div>
        <!-- column 2 : Twingly/Corpus Res -->
        <div class="col-md-2 col-sm-6">
            @if (String.IsNullOrEmpty(ViewBag.MostPopularVariant) == false)
                {
                <div class="panel panel-default active arabic ">
                    <div class="panel-heading">Most Popular Variant : @ViewBag.MostPopularVariant</div>
                    <div class="panel-body" style="padding: 0; height: 150px; position:relative;">
                        <div class="loader"></div>
                        <textarea style="height: 100%; width: 100%" id="arabic-text">@ViewBag.Post</textarea>
                    </div>
                </div>
            }
        </div>
        <!-- column 3 : corpus info -->
        <div class="col-md-3 col-sm-6">
            <div class="panel panel-default active arabic ">
                <div class="panel-heading">Corpus/Bidict Info</div>
                <div class="panel-body" style="height: 150px; position:relative;">
                    <div class="row">
                        <div class="col-md-6 col-xs-6"><small>Corpus Lines:</small></div>
                        <div class="col-md-6 col-xs-6"><small>@String.Format("{0:n0}", @ViewBag.CorpusSize)</small></div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-xs-6"><small>Bidict Lines:</small></div>
                        <div class="col-md-6 col-xs-6"><small>@String.Format("{0:n0}", @ViewBag.BidictSize)</small></div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-xs-6"><small>Arabizi Entries:</small></div>
                        <div class="col-md-6 col-xs-6"><small>@String.Format("{0:n0}", @ViewBag.ArabiziEntriesCount)</small></div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-xs-6"><small>Entities Count:</small></div>
                        <div class="col-md-6 col-xs-6"><small>@String.Format("{0:n0}", @ViewBag.EntitiesCount)</small></div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-xs-6"><small>Ratio Latin:</small></div>
                        <div class="col-md-6 col-xs-6"><small>@String.Format("{0:n2}", @ViewBag.RatioLatinWordsOnEntries)</small></div>
                    </div>
                </div>
            </div>
        </div>
        <!-- column 4 : twingly accounts -->
        <div class="col-md-4 col-sm-6">
            <div class="panel panel-default active arabic ">
                <div class="panel-heading row" style="margin-left: 0px; margin-right: 0px;">
                    <div class="col-xs-6 col-lg-2">Twingly</div>
                    <div class="col-xs-6 col-lg-10"><input type="text" name="txtNewTwinglyAccount" class="form-control" value="" placeholder="" id="txtNewTwinglyAccount" style="padding: 0; border: 0; height: 20px;"></div>
                </div>
                <div class="panel-body" style="height: 150px; position: relative;">
                    <div class="form-group">
                        <div id="myButtons" class="btn-group-vertical btn-group-sm" data-toggle="buttons">
                            @foreach (var twinglyAccount in @ViewBag.TwinglyAccounts)
                            {
                                <label class="btn btn-primary @twinglyAccount.CurrentActive" style="font-family: monospace; text-align: left;" data-toggle='tooltip' title='@twinglyAccount.UserName'>
                                    @Html.RadioButton("name", "value", true, new { id = "id", style = "width: 80%;" }) @twinglyAccount.ID_TWINGLYACCOUNT_API_KEY.ToString().ToUpper()
                                    <span class='badge'>@twinglyAccount.calls_free</span>
                                    <a href="@Url.Action("TwinglySetup_deleteAccount", new { id_twinglyaccount_api_key = twinglyAccount.ID_TWINGLYACCOUNT_API_KEY.ToString().ToUpper() })" style="position: absolute; right: 0; top: 0;"><i class="remove glyphicon glyphicon-remove-sign glyphicon-white"></i></a>
                                </label>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- upload large file of posts -->
    <div id="row-bulk-input" class="row" style="margin-top: 15px; display: none;">
        @using (Html.BeginForm("Data_Upload", "Train", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-inline" }))
        {
            <div class="form-group">
                <label for="importposts">Bulk Import:</label>
                <input type="file" name="file" class="form-control" id="importposts" accept=".tsv,.txt,.csv" />
                <label for="mainEntity">Main Tag:</label>
                @Html.DropDownList("mainEntity", (IEnumerable<SelectListItem>)ViewBag.XtrctThemesPlain, null, new { @class = "form-control" })
            </div>
            <!--<button class="btn btn-success btn-md" type="submit" id="import_posts" onclick="monitor();">-->
            <button class="btn btn-success btn-md" type="submit" id="import_posts">
                Import Posts
            </button>
            <div class="alert alert-warning alert-dismissable div-inline margin-bottom-0" style="@(showAlertWarning != true ? "display: none;" : "")">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                <strong>Warning!</strong> @msgAlert
            </div>
            <div class="alert alert-success alert-dismissable div-inline margin-bottom-0" style="@(showAlertSuccess != true ? "display: none;" : "")">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                <strong>Success!</strong> @msgAlert
            </div>
            if (!string.IsNullOrEmpty(Convert.ToString(message)))
            {
                <div class="alert alert-success alert-dismissable div-inline margin-bottom-0">
                    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                    <strong>Success!</strong> @(Convert.ToString(message))
                </div>
            }
        }
        <div id="monitors"></div>
    </div>

    <!-- date range filter & NER filter -->
    <div class="row">
        <!-- date range filter -->
        <div class="col-sm-3"><label>Minimum Date: <input name="minpoststable" id="minpoststable" type="search" class="form-control input-sm"></label></div>
        <div class="col-sm-3"><label>Maximum Date: <input name="maxpoststable" id="maxpoststable" type="search" class="form-control input-sm"></label></div>
        <!-- NER filter -->
        <div class="col-sm-3">
            <label>Filter by Entity: 
                <div class="dropdown-menu open" role="combobox" style="max-height: 144px; overflow: hidden; min-height: 42px;">
                    <div class="bs-searchbox"><input type="text" class="form-control" autocomplete="off" role="textbox" aria-label="Search"></div>
                    <ul class="dropdown-menu inner" role="listbox" aria-expanded="true" style="max-height: 90px; overflow-y: auto; min-height: 0px;">
                        @foreach (var ner in nersWithCounts)
                        {
                            <li>
                                <a tabindex="0" class="" data-tokens="null" role="option" aria-disabled="false" aria-selected="false">
                                <span class="text">@ner.Keyword (@ner.CountPerKeyword)</span>
                                <span class="glyphicon glyphicon-ok check-mark"></span></a>
                            </li>
                        }
                    </ul>
                </div>
                <select class="selectpicker" data-live-search="true" tabindex="-98" multiple title="Choose one of the following...">
                    @foreach (var ner in nersWithCounts)
                    {
                        if (IsRandALCat(ner.Keyword[0]))
                        { 
                            <option style="direction: rtl;" value="@ner.Keyword">@ner.Keyword (@ner.CountPerKeyword)</option>
                        }
                        else
                        {
                            <option style="direction: ltr;" value="@ner.Keyword">@ner.Keyword (@ner.CountPerKeyword)</option>
                        }
                    }
                </select>
            </label>
        </div>  
    </div>

    <!-- Place where you will insert your partial -->
    <input type="hidden" id="hdnToken" value="@token" />
    <div id="partialPlaceHolder" style="display:inline;"> </div>
}